#! /bin/zsh

# vim
alias vim=$NVIM
alias v=$NVIM

# general
alias ct="printf '\033[2J\033[3J\033[1;1H'" # clear terminal
alias gup="pass git push"
alias ka="killall"
alias mon="while; do; clear; lt; sleep 1; done" # monitor directory
alias oc="octave"
alias py="python3"
alias yb="yarn build"
alias yd="yarn dev"
alias zr="exec $SHELL -l" # reloads shell
alias fdir="open /System/Library/CoreServices/Finder.app"

# fuzzy finder
alias ff='fzf -m -1 -0 --no-bold'
alias fm='cd ${$(fd --type d --hidden --exclude .git | ff):-$(pwd)}'
alias ft='fm; tn'
alias fv='v $(ff)'

# tmux shortcuts
alias tm="tmux"
alias td="tmux detach"
alias tn="tmux new -s"
alias ts="tmux ls"
alias ta="tmux attach-session -t"
alias tk="tmux kill-session -t"

# java commands
alias j="java"
alias jc="javac"
alias jfm="java -jar /$HOME/.config/misc/java-formatter.jar --replace"
alias jg="./gradlew"

# conda commands
alias pyai="source ~/opt/anaconda3/bin/activate && source activate CS2109S"
alias pyde="conda deactivate && conda deactivate"
alias condal="pyai && pyde"
alias jpt="/Users/kevin/opt/anaconda3/bin/jupyter_mac.command"
alias jptai="/Users/kevin/opt/anaconda3/envs/CS2109S/bin/jupyter_mac.command"

# NUS specific
alias snus="ssh-copy-id kevincjk@stu.comp.nus.edu.sg"

# canvas-sync
source $HOME/ripples/nus/canvas/token
CANVAS_CONFIG="$HOME/ripples/nus/canvas/config.yml"
alias canvas="canvas-sync $CANVAS_CONFIG"
alias canvasf="canvas-sync $CANVAS_CONFIG fetch"
alias canvasp="canvas-sync $CANVAS_CONFIG pull"

# scp for NUS stu.comp network
function nuscp() {
  if [ "$1" ]; then
    if [ "$2" ]; then
      scp -r $1 kevincjk@stu.comp.nus.edu.sg:$2
    else
      scp -r $1 kevincjk@stu.comp.nus.edu.sg:~
    fi
  else
    echo "missing file to scp\nadd local path to file(s)"
  fi
}

# codeforces shortcuts
# clones the template file into a specified filename
# to be called while inside codeforces/cpp, codeforces/python, codeforces/java
function cfnew() {
  FILETYPE=$(basename $PWD);
  EXTENSION="";

  case $FILETYPE in 
    "cpp")
      EXTENSION="cpp"
      ;;
    "python")
      EXTENSION="py"
      ;;
    "java")
      EXTENSION="java"
      ;;
    *)
      echo "invalid directory! \ngo to a language in codeforces";
      return 1;;
  esac

  if [ "$1" ]; then
    cp "template.$EXTENSION" "$1.$EXTENSION";
  else
    echo "missing filename to clone template to";
  fi
}

# simple function for testing with/without inputs
function cftest() {
  FILETYPE=$(basename $PWD);

  if [ "$1" ]; then
    # pass
  else 
    echo "missing filename to test";
  fi

  case $FILETYPE in 
    "cpp")
      ./"$1.exe"
      ;;
    "python")
      python3 "$1.py"
      ;;
    "java")
      java "$1"
      ;;
    *)
      echo "invalid directory! \ngo to a language in codeforces";
      return 1;;
  esac
}

# same as cftest, but with input file
function cftesti() {
  FILETYPE=$(basename $PWD);

  if [ "$1" ]; then
    # pass
  else 
    echo "missing filename to test";
  fi

  case $FILETYPE in 
    "cpp")
      ./"$1.exe" < input.txt
      ;;
    "python")
      python3 "$1.py" < input.txt
      ;;
    "java")
      java "$1" < input.txt
      ;;
    *)
      echo "invalid directory! \ngo to a language in codeforces";
      return 1;;
  esac
}

# simpler function for compiling cpp files
function gpp() {
  EXTENSION="cpp";

  if [ "$1" ]; then 
    g++ "$1.$EXTENSION" -o "$1.exe";
    chmod +x "$1.exe";
  else 
    echo "missing filename to compile";
  fi
}
